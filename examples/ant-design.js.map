{"version":3,"sources":["webpack:///./examples/ant-design.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyB;AAEY;AACX;AACO;AACI;AAGrC;;IAAgB;;;AAAhB;;;;;AACE,cAAK;AACI,qBAAO;AACT,mBAAK;AACI,4BAAO;AACf,oBAAO;AACA,2BACb;AANM;AAQR,cAAO,UAAO;AACR,kBAAS;AACE;AACV,uBAAG,EAAM;AACT,uBAAG,EACL;AAHc;AAIR,yBAEX;AAPgB;AAOf;AAED,cAAO,UAAO;AACM;AACd,kBAAS;AACJ,yBAEX;AAHgB;AAGf;AAED,cAAsB,yBAAO;AACvB,kBAAS;AACG,gCAAG,EAAO,OAE5B;AAHgB;AAGf;AAED,cAAW,cAAQ;AACb,kBAAS;AACN,uBAAM,MAAM,MAAM,UAAU,MAAM,MAE3C;AAHgB;AAGf;AAED,cAAM,SAAO;AACP,kBAAS;AACL,wBAAG,EAAO,OAEpB;AAHgB;AAyElB;;AAAC;;wBApEO;AACJ,YAAW;AACJ,mBAAM,KAAM,MACjB;AAFY;AAGd,YAAiB,gBAAM;AACpB,YAAK,KAAM,MAAQ,QAAE;AACT,4BACf;AAAC;AACD,YAAc,WAAG,qEAAc,WAAc,eAAM,OAAE,EAAY,YAAQ,QAAQ,QAAS,YAAuB;AACjH,YAAe,SACb,4DAAO,oEACE,SAAM,KAAM,MAAQ,SACd,eAAe,eACnB,WAAO,QACH,eAAO,QACb,SAAM,KAAQ,SAChB,OAAO,OACC,eAAM,KAAM,MAAc,eACzB,gBAAM,KAAM,MAAe,gBACnC,QAAE,EAAK,KAAE,CAAI,KAAM,MAAE,CAAI,KAAO,OAAK,KAAQ,QAAO,OACjD,WAAM,MACV,OAAU,UACN,WAAe,kBAExB,qEAAS,OACT,uEAAkB,gBAClB,wEAAe,SAAM,KAAY,eAAuB,iBACxD,qEAAU,OAAE,EAAQ,QAEtB;AACK,eACL,qEAAU,OAAE,EAAO,OAAO,OAAQ,QAAY,YAAI,IAAe,kBAC/D,qEAQQ,yKACR,uEACE,wEAAiB,WAAkB,mBAAQ,SAAM,KAAQ,WAEhD,wBAET,gGAEE,uEACM,MAAW,YACR,SAAM,KAAM,MAAe,gBAC1B,UAAM,KAEV,oCAER,qFAEE,uEACM,MAAW,YACR,SAAM,KAAM,MAAO,QAClB,UAAM,KAGhB,aAIV;AACD;;;EAhH4B,8CAAU;;AAkH/B,kDAAO,OACb,yEACE,wEAA0B,sBAC1B,4DAAU,WACN,QACE,SAAe,eACvB,oB","file":"examples/ant-design.js","sourcesContent":["/* eslint no-console:0 */\r\n\r\nimport 'rc-dialog/assets/index.less';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// use import Dialog from 'rc-dialog'\r\nimport Dialog from '../src/DialogWrap';\r\n\r\nclass MyControl extends React.Component {\r\n  state = {\r\n    visible: false,\r\n    width: 600,\r\n    destroyOnClose: false,\r\n    center: false,\r\n    mousePosition: {},\r\n  };\r\n\r\n  onClick = e => {\r\n    this.setState({\r\n      mousePosition: {\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      },\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  onClose = e => {\r\n    // console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n\r\n  onDestroyOnCloseChange = e => {\r\n    this.setState({\r\n      destroyOnClose: e.target.checked,\r\n    });\r\n  }\r\n\r\n  changeWidth = () => {\r\n    this.setState({\r\n      width: this.state.width === 600 ? 800 : 600,\r\n    });\r\n  }\r\n\r\n  center = e => {\r\n    this.setState({\r\n      center: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      width: this.state.width,\r\n    };\r\n    let wrapClassName = '';\r\n    if (this.state.center) {\r\n      wrapClassName = 'center';\r\n    }\r\n    const titleEle = <div className=\"drag-handle\" style={{ background: '#eee', cursor: 'move'}}>please drag me</div>;\r\n    const dialog = (\r\n      <Dialog\r\n        visible={this.state.visible}\r\n        wrapClassName={wrapClassName}\r\n        animation=\"zoom\"\r\n        maskAnimation=\"fade\"\r\n        onClose={this.onClose}\r\n        style={style}\r\n        mousePosition={this.state.mousePosition}\r\n        destroyOnClose={this.state.destroyOnClose}\r\n        bounds={{ top: -100, left: -500, right: 500, bottom: 500 }}\r\n        draggable={true}\r\n        title={titleEle}\r\n        appendDOM=\"drag-element\"\r\n      >\r\n        <input />\r\n        <p>basic modal</p>\r\n        <button onClick={this.changeWidth}>change width</button>\r\n        <div style={{ height: 200 }} />\r\n      </Dialog>\r\n    );\r\n    return (\r\n      <div style={{ width: '90%', margin: '0 auto' }} id=\"drag-element\">\r\n        <style>\r\n          {`\r\n            .center {\r\n              display: flex;\r\n              align-items: center;\r\n              justify-content: center;\r\n            }\r\n            `}\r\n        </style>\r\n        <p>\r\n          <button className=\"btn btn-primary\" onClick={this.onClick}>\r\n            show dialog\r\n          </button>\r\n          &nbsp;\r\n          <label>\r\n            destroy on close:\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={this.state.destroyOnClose}\r\n              onChange={this.onDestroyOnCloseChange}\r\n            />\r\n          </label>\r\n          &nbsp;\r\n          <label>\r\n            center\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={this.state.center}\r\n              onChange={this.center}\r\n            />\r\n          </label>\r\n        </p>\r\n        {dialog}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <h2>ant-design dialog</h2>\r\n    <MyControl />\r\n  </div>,\r\n  document.getElementById('__react-content'),\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./examples/ant-design.tsx"],"sourceRoot":""}